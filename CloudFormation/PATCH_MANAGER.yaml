AWSTemplateFormatVersion: '2010-09-09'
Description: Template to deploy 3 EC2 instances and run patches once a week on Wednesday at 4:15 a.m. with Systems Manager Patch Manager

Parameters:
  InstanceType:
    Description: EC2 Instance Type
    Type: String
    Default: t2.micro
  
  KeyPairName:
    Description: Name of an existing EC2 KeyPair to enable SSH access
    Type: String
    Default: sandbox-kp-rsa-pem  
  
  AMI:
    Description: AMI ID for the EC2 instances
    Type: String
    Default: ami-0bb84b8ffd87024d8

  Region:
    Description: Region in which the Amazon S3 bucket to write instance-level logs to is in
    Type: String
    Default: us-east-1  

Resources:
## IAM ROLE FOR EC2 TO ACCESS SSM
  EC2SSMRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow0
            Principal:
              Service: ec2.amazonaws.com
            Action: sts:AssumeRole
      Path: /
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore
      Policies:
        - PolicyName: BaselineOverride
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action: s3:GetObject
                Resource: arn:aws:s3:::aws-quicksetup-patchpolicy-*

## INSTANCE PROFILE TO BE ASSOCIATED WITH EC2 INSTANCES
  EC2InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - !Ref EC2SSMRole
      Path: /

## DEPLOYING 3 INSTANCES
  EC2Instance1:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: !Ref InstanceType
      KeyName: !Ref KeyPairName
      ImageId: !Ref AMI
      IamInstanceProfile: !Ref EC2InstanceProfile
      Tags:
        - Key: Name
          Value: EC2Instance1

  EC2Instance2:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: !Ref InstanceType
      KeyName: !Ref KeyPairName
      ImageId: !Ref AMI
      IamInstanceProfile: !Ref EC2InstanceProfile
      Tags:
        - Key: Name
          Value: EC2Instance2

  EC2Instance3:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: !Ref InstanceType
      KeyName: !Ref KeyPairName
      ImageId: !Ref AMI
      IamInstanceProfile: !Ref EC2InstanceProfile
      Tags:
        - Key: Name
          Value: EC2Instance3

## PATCH MANAGER CONFIGURATION
## CREATE MAINTENANCE WINDOW
  MaintenanceWindow:
    Type: AWS::SSM::MaintenanceWindow
    Properties:
      AllowUnassociatedTargets: true
      Cutoff: 1
      Duration: 2
      Name: PatchMaintenanceWindow
      Schedule: cron(15 4 ? * WED *)
      ScheduleTimezone: UTC
    DependsOn:
      - EC2Instance1
      - EC2Instance2
      - EC2Instance3  

## CREATE WINDOWS TARGET
  MaintenanceWindowTarget:
    Type: AWS::SSM::MaintenanceWindowTarget
    Properties:
      ResourceType: INSTANCE
      Targets:
        - Key: InstanceIds
          Values:
            - !Ref EC2Instance1
            - !Ref EC2Instance2
            - !Ref EC2Instance3
      WindowId: !Ref MaintenanceWindow
      OwnerInformation: MentorTaskPatchPolicy
      DependsOn: MaintenanceWindow

## CREATE S3 BUCKET FOR PATCHING LOG OUTPUT
  S3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub "patch-logs-${AWS::AccountId}-${AWS::Region}"

## DEFINE TASK FOR SSM MAINTENANCE WINDOW        
  MaintenanceWindowTask:
    Type: AWS::SSM::MaintenanceWindowTask
    Properties:
      MaxConcurrency: '10'
      MaxErrors: '2'
      Priority: 1
      TaskArn: AWS-PatchInstance
      TaskType: RUN_COMMAND
      WindowId: !Ref MaintenanceWindow
      LoggingInfo:
        S3Bucket: !Ref S3Bucket
        Region: !Ref Region
      Targets:
        - Key: InstanceIds
          Values:
            - !Ref EC2Instance1
            - !Ref EC2Instance2
            - !Ref EC2Instance3
      DependsOn: MaintenanceWindow      
